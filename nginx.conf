user nginx;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 16384;

events {
  worker_connections 8192;
  use epoll;
  multi_accept on;
}

http {
 
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 60s;
  keepalive_requests 1000;
  reset_timedout_connection on;
  client_body_timeout 60s;
  client_body_buffer_size 4M;
  client_max_body_size 1024M;
  server_tokens off;
 
  proxy_buffers 256 16k;
  proxy_buffer_size 32k;
  proxy_set_header Proxy "";
  proxy_connect_timeout 600;
  proxy_send_timeout 600;
  proxy_read_timeout 600;
  
  
    server {
        listen         *:80 default_server;
        
        # http Alpine proxy repo
        location /alpine/ {
            autoindex on;
            rewrite ^/alpine/(.*)$ /repository/alpine/$1 last;
        }
        
        location /repository/alpine/ {
            proxy_pass http://nexus:8081/repository/alpine/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto "http";
        }

        # redirect
        location / {
            return         301 https://nexus.xxx.ru$request_uri;
        }
    }


    server {
        listen   *:443 default_server ssl;
        server_name  nexus.xxx.ru;

        # allow large uploads of files - refer to nginx documentation
        # client_max_body_size 1024m;
        client_max_body_size 0;

        # optimize downloading files larger than 1G - refer to nginx doc before adjusting
        proxy_max_temp_file_size 2048M; 

#       ssl on;
        ssl_certificate      /etc/nginx/ssl.crt;
        ssl_certificate_key  /etc/nginx/ssl.key;

        #???
        ssl_session_cache  builtin:1000  shared:SSL:10m;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
        ssl_prefer_server_ciphers on;
        #???

        
##############
# NEXUS ######
##############

        location /nuget/ {
            rewrite ^/nuget/(.*)$ /repository/nuget-group/$1 last;
        }

        # Все запросы GET и HEAD* проксируем в группу docker репозиториев
        # Остальные ("изменяющие") - в hosted репозиторий

        # *HEAD .../blobs делается перед пушем, поэтому его из hosted,
        # а не из группы
        # иначе будем получать ошибку от hosted репозитория: 
        # blob unknown: blob unknown to registry
        # потому что все блобы должны быть в hosted (он не знает, что есть группа и прокси)
        location ~ ^/(v1|v2)/[^/]+/?[^/]+/blobs/ {
            if ($request_method ~* (POST|PUT|DELETE|PATCH|HEAD) ) {
                rewrite ^/(.*)$ /repository/docker-hosted/$1 last;
            }
            rewrite ^/(.*)$ /repository/docker/$1 last;
        }

        location ~ ^/(v1|v2)/ {
            if ($request_method ~* (POST|PUT|DELETE|PATCH) ) {
                rewrite ^/(.*)$ /repository/docker-hosted/$1 last;
            }
            rewrite ^/(.*)$ /repository/docker/$1 last;
        }

        location / {
            proxy_pass http://nexus:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto "https";
        }
    }
}
